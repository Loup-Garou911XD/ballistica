name: CD

on:
  # Run on pushes and pull-requests
  push:
  pull_request:

jobs:
  setup_bombsquad_cache:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup build env
        uses: ./.github/actions/bombsquad_build_env
      - name: Make the build
        run: |
          make assets-cmake
          make assets-windows

  make_linux_x86_64_gui_debug_build:
    needs: setup_bombsquad_cache
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
      # - name: Setup ccache
      #   uses: hendrikmuhs/ccache-action@v1.2
      #   with:
      #     key: ${{ github.job }}-linux-x86_64-gui-debug
      #     create-symlink: true
      # - name: restore mtime
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y git-restore-mtime
      #     git restore-mtime
      - name: Cache cmake build
        uses: actions/cache@v4
        env:
          cache-name: cache-cmake
        with:
          path: build/cmake
          key: ${{ runner.os }}-${{runner.arch}}-${{ env.cache-name }}-${{ hashFiles('config/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-${{runner.arch}}-${{ env.cache-name }}-
      - name: Setup build env
        uses: ./.github/actions/bombsquad_build_env
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install build-essential \
            clang \
            clang-format \
            cmake \
            libglut-dev \
            libopenal-dev \
            libsdl2-dev \
            libvorbis-dev \
            git-restore-mtime

      - uses: chetan/git-restore-mtime-action@v2
      # - run: |
      #     git restore-mtime
      - name: Make the build
        run: |
          make env
          # export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"
          # export CMAKE_EXTRA_ARGS="-DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER_LAUNCHER=ccache"
          # find . -type f -name "Makefile" -exec touch -t $(date -d "1 week ago" +%Y%m%d%H%M) {} +
          curl https://raw.githubusercontent.com/MestreLion/git-tools/refs/heads/main/git-restore-mtime \
          -o git-restore-mtime
          chmod +x git-restore-mtime
          ./git-restore-mtime
          stat LICENSE
          make cmake-build
      - name: Upload the build
        uses: actions/upload-artifact@v4
        with:
          name: linux_x86_64_gui_(debug)
          path: build/cmake/debug/staged/ballisticakit


  # make_linux_x86_64_server_debug_build:
  #   needs: setup_bombsquad_cache
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Setup build env
  #       uses: ./.github/actions/bombsquad_build_env
  #     - name: Make the build
  #       run: make prefab-server-debug-build
  #     - name: Upload the build
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: linux_x86_64_server_(debug)
  #         path: build/prefab/full/linux_x86_64_server

  # make_linux_arm64_gui_debug_build:
  #   needs: setup_bombsquad_cache
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Setup build env
  #       uses: ./.github/actions/bombsquad_build_env
  #     - name: Make the build
  #       run: make prefab-linux-arm64-gui-debug-build
  #     - name: Upload the build
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: linux_arm64_gui_(debug)
  #         path: build/prefab/full/linux_arm64_gui

  # make_linux_arm64_server_debug_build:
  #   needs: setup_bombsquad_cache
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Setup build env
  #       uses: ./.github/actions/bombsquad_build_env
  #     - name: Make the build
  #       run: make prefab-linux-arm64-server-debug-build
  #     - name: Upload the build
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: linux_arm64_server_(debug)
  #         path: build/prefab/full/linux_arm64_server

  # Limiting mac prefab builds to arm only for now.
  # Leaving this here in case we re-enable them though.

  # make_mac_x86_64_gui_debug_build:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: Set up Python
  #     uses: actions/setup-python@v5
  #     with:
  #       python-version: '3.13'
  #   - name: Setup project environment
  #     run: make env
  #   - name: Make the build
  #     run: make prefab-mac-x86-64-gui-debug-build
  #   - name: Upload the build
  #     uses: actions/upload-artifact@v4
  #     with:
  #       name: mac_x86_64_gui_(debug)
  #       path: build/prefab/full/mac_x86_64_gui

  # make_mac_x86_64_server_debug_build:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: Set up Python
  #     uses: actions/setup-python@v5
  #     with:
  #       python-version: '3.13'
  #   - name: Setup project environment
  #     run: make env
  #   - name: Make the build
  #     run: make prefab-mac-x86-64-server-debug-build
  #   - name: Upload the build
  #     uses: actions/upload-artifact@v4
  #     with:
  #       name: mac_x86_64_server_(debug)
  #       path: build/prefab/full/mac_x86_64_server

  # make_mac_arm64_gui_debug_build:
  #   needs: setup_bombsquad_cache
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Setup build env
  #       uses: ./.github/actions/bombsquad_build_env
  #     - name: Make the build
  #       run: make prefab-mac-arm64-gui-debug-build
  #     - name: Upload the build
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: mac_arm64_gui_(debug)
  #         path: build/prefab/full/mac_arm64_gui

  # make_mac_arm64_server_debug_build:
  #   needs: setup_bombsquad_cache
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Setup build env
  #       uses: ./.github/actions/bombsquad_build_env
  #     - name: Make the build
  #       run: make prefab-mac-arm64-server-debug-build
  #     - name: Upload the build
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: mac_arm64_server_(debug)
  #         path: build/prefab/full/mac_arm64_server

  # make_windows_x86_64_gui_debug_build:
  #   needs: setup_bombsquad_cache
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Setup build env
  #       uses: ./.github/actions/bombsquad_build_env
  #     - name: Make the build
  #       run: make prefab-windows-x86-64-gui-debug-build
  #     - name: Upload the build
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: windows_x86_64_gui_(debug)
  #         path: build/prefab/full/windows_x86_64_gui

  # make_windows_x86_64_server_debug_build:
  #   needs: setup_bombsquad_cache
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Setup build env
  #       uses: ./.github/actions/bombsquad_build_env
  #     - name: Make the build
  #       run: make prefab-windows-x86-64-server-debug-build
  #     - name: Upload the build
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: windows_x86_64_server_(debug)
  #         path: build/prefab/full/windows_x86_64_server
